/** Clippium data automatically generated by clippium-toolkit */
export default {
  "desc": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
  "version": "1.0.7",
  "commands": {
    "pet-petId-uploadImage": {
      "desc": "Path: /pet/{petId}/uploadImage",
      "commands": {
        "post": {
          "desc": "Method: post",
          "flags": {
            "petId": {
              "desc": "ID of pet to update",
              "required": true,
              "type": "string"
            },
            "additionalMetadata": {
              "desc": "Additional data to pass to server",
              "required": false,
              "type": "string"
            },
            "file": {
              "desc": "file to upload",
              "required": false,
              "type": "string"
            }
          }
        }
      }
    },
    "pet": {
      "desc": "Path: /pet",
      "commands": {
        "post": {
          "desc": "Method: post",
          "flags": {
            "body": {
              "desc": "Pet object that needs to be added to the store",
              "required": true,
              "type": "object"
            }
          }
        },
        "put": {
          "desc": "Method: put",
          "flags": {
            "body": {
              "desc": "Pet object that needs to be added to the store",
              "required": true,
              "type": "object"
            }
          }
        }
      }
    },
    "pet-findByStatus": {
      "desc": "Path: /pet/findByStatus",
      "commands": {
        "get": {
          "desc": "Method: get",
          "flags": {
            "status": {
              "desc": "Status values that need to be considered for filter",
              "required": true,
              "type": "string"
            }
          }
        }
      }
    },
    "pet-findByTags": {
      "desc": "Path: /pet/findByTags",
      "commands": {
        "get": {
          "desc": "Method: get",
          "flags": {
            "tags": {
              "desc": "Tags to filter by",
              "required": true,
              "type": "string"
            }
          }
        }
      }
    },
    "pet-petId": {
      "desc": "Path: /pet/{petId}",
      "commands": {
        "get": {
          "desc": "Method: get",
          "flags": {
            "petId": {
              "desc": "ID of pet to return",
              "required": true,
              "type": "string"
            }
          }
        },
        "post": {
          "desc": "Method: post",
          "flags": {
            "petId": {
              "desc": "ID of pet that needs to be updated",
              "required": true,
              "type": "string"
            },
            "name": {
              "desc": "Updated name of the pet",
              "required": false,
              "type": "string"
            },
            "status": {
              "desc": "Updated status of the pet",
              "required": false,
              "type": "string"
            }
          }
        },
        "delete": {
          "desc": "Method: delete",
          "flags": {
            "api_key": {
              "desc": "",
              "required": false,
              "type": "string"
            },
            "petId": {
              "desc": "Pet id to delete",
              "required": true,
              "type": "string"
            }
          }
        }
      }
    },
    "store-inventory": {
      "desc": "Path: /store/inventory",
      "commands": {
        "get": {
          "desc": "Method: get"
        }
      }
    },
    "store-order": {
      "desc": "Path: /store/order",
      "commands": {
        "post": {
          "desc": "Method: post",
          "flags": {
            "body": {
              "desc": "order placed for purchasing the pet",
              "required": true,
              "type": "object"
            }
          }
        }
      }
    },
    "store-order-orderId": {
      "desc": "Path: /store/order/{orderId}",
      "commands": {
        "get": {
          "desc": "Method: get",
          "flags": {
            "orderId": {
              "desc": "ID of pet that needs to be fetched",
              "required": true,
              "type": "string"
            }
          }
        },
        "delete": {
          "desc": "Method: delete",
          "flags": {
            "orderId": {
              "desc": "ID of the order that needs to be deleted",
              "required": true,
              "type": "string"
            }
          }
        }
      }
    },
    "user-createWithList": {
      "desc": "Path: /user/createWithList",
      "commands": {
        "post": {
          "desc": "Method: post",
          "flags": {
            "body": {
              "desc": "List of user object",
              "required": true,
              "type": "array"
            }
          }
        }
      }
    },
    "user-username": {
      "desc": "Path: /user/{username}",
      "commands": {
        "get": {
          "desc": "Method: get",
          "flags": {
            "username": {
              "desc": "The name that needs to be fetched. Use user1 for testing. ",
              "required": true,
              "type": "string"
            }
          }
        },
        "put": {
          "desc": "Method: put",
          "flags": {
            "username": {
              "desc": "name that need to be updated",
              "required": true,
              "type": "string"
            },
            "body": {
              "desc": "Updated user object",
              "required": true,
              "type": "object"
            }
          }
        },
        "delete": {
          "desc": "Method: delete",
          "flags": {
            "username": {
              "desc": "The name that needs to be deleted",
              "required": true,
              "type": "string"
            }
          }
        }
      }
    },
    "user-login": {
      "desc": "Path: /user/login",
      "commands": {
        "get": {
          "desc": "Method: get",
          "flags": {
            "username": {
              "desc": "The user name for login",
              "required": true,
              "type": "string"
            },
            "password": {
              "desc": "The password for login in clear text",
              "required": true,
              "type": "string"
            }
          }
        }
      }
    },
    "user-logout": {
      "desc": "Path: /user/logout",
      "commands": {
        "get": {
          "desc": "Method: get"
        }
      }
    },
    "user-createWithArray": {
      "desc": "Path: /user/createWithArray",
      "commands": {
        "post": {
          "desc": "Method: post",
          "flags": {
            "body": {
              "desc": "List of user object",
              "required": true,
              "type": "array"
            }
          }
        }
      }
    },
    "user": {
      "desc": "Path: /user",
      "commands": {
        "post": {
          "desc": "Method: post",
          "flags": {
            "body": {
              "desc": "Created user object",
              "required": true,
              "type": "object"
            }
          }
        }
      }
    }
  }
};
